Variables and Operators

1. What is the output of the following code?
let a = 1;
let b = 0;
while (a <= 3) {
    a++;
    b += a * 2;
}
console.log(b);
(a) 10
(b) 12
(c) 14
(d) 16

Answer: 14

2. What does the following code output?
let x = 0;
let y = '0';
console.log(x == y, x === y);
(a) true false
(b) false true
(c) true true
(d) false false

Answer: true false

3. Given the following code, what is the value of x after execution?
let x = 3;
x += (x *= 2);
(a) 6
(b) 9
(c) 12
(d) 15

Answer: 12


Control Statements
4. What will the following code output?
for (let i = 0; i < 3; i++) {
    setTimeout(() => console.log(i), 1000);
}
(a) 0 1 2
(b) 3 3 3
(c) 0 1 2 3
(d) undefined undefined undefined

Answer: 0 1 2

5. What is the output of this code?
let x = 10;
if (x = 5) {
    console.log(x);
} else {
    console.log(x * 2);
}
(a) 5
(b) 10
(c) 20
(d) 0

Answer: 5

Loops
6. How many times will the loop execute?
let count = 0;
for (let i = 1; i <= 5; i++) {
    for (let j = i; j <= 5; j++) {
        count++;
    }
}
console.log(count);
(a) 5
(b) 10
(c) 15
(d) 20

Answer: 15

7. What is the output of the following code?
let result = '';
for (let i = 0; i < 4; i++) {
    for (let j = 0; j < i; j++) {
        result += '*';
    }
}
console.log(result);
(a) ***
(b) ****
(c) *******
(d) ********

Answer: ****

Functions
8. What will be logged to the console?
function foo(a, b = 4, c = 8) {
    return a + b + c;
}
console.log(foo(2));
(a) 14
(b) 10
(c) 6
(d) 2

Answer: 14

9. What is the output of this code?
(function (x) {
    return (function (y) {
        console.log(x);
    })(2);
})(1);
(a) 1
(b) 2
(c) undefined
(d) ReferenceError

Answer: 1

Objects
10. What will the following code output?
const person = {
    name: 'John',
    greet: function () {
        console.log(this.name);
    }
};
const greet = person.greet;
greet();
(a) John
(b) undefined
(c) ReferenceError
(d) null

Answer: undefined

11. What is the output of this code?
const obj = {
    a: 1,
    b: {
        c: 2,
        d: 3
    }
};
const { a, b: { c } } = obj;
console.log(a, c);
(a) 1 2
(b) 1 3
(c) undefined 2
(d) undefined 3

Answer: 1 2

Arrays
12. What will the following code output?
const arr = [1, 2, 3, 4];
const result = arr.reduce((acc, val) => acc + val, 0);
console.log(result);
(a) 10
(b) 9
(c) 8
(d) 7

Answer: 10

13. What is the output of this code?
const arr = [1, 2, 3];
arr[10] = 99;
console.log(arr.length);
(a) 3
(b) 4
(c) 11
(d) 10

Answer: 11

DOM
14. What will the following code output?
document.body.innerHTML = '<div id="test">Hello</div>';
const el = document.getElementById('test');
console.log(el.textContent);
(a) Hello
(b) undefined
(c) null
(d) ReferenceError

Answer: Hello

15. How can you select all elements with the class name 'item'?
(a) document.querySelector('.item')
(b) document.querySelectorAll('.item')
(c) document.getElementsByClassName('item')
(d) Both b and c

Answer: Both b and c

16. What does the following code output?
let a = [1, 2, 3];
let b = [1, 2, 3];
console.log(a == b, a === b);
(a) true true
(b) false false
(c) true false
(d) false true

Answer: false false

17. What will be the result of this code?
function test() {
    console.log(a);
    console.log(foo());
    var a = 1;
    function foo() {
        return 2;
    }
}
test();
(a) undefined, 2
(b) ReferenceError, 2
(c) undefined, undefined
(d) 1, 2

Answer: undefined, 2

18. What does the following code output?
const a = {};
const b = { key: 'b' };
const c = { key: 'c' };
a[b] = 123;
a[c] = 456;
console.log(a[b]);
(a) 123
(b) 456
(c) undefined
(d) TypeError

Answer: 456

19. What will the following code output?
let x = [1, 2, 3];
let y = x;
x = [4, 5, 6];
console.log(y);
(a) [1, 2, 3]
(b) [4, 5, 6]
(c) undefined
(d) TypeError

Answer: [1, 2, 3]

20. What will the following code output?
const obj1 = { key: 'value' };
const obj2 = obj1;
obj2.key = 'newValue';
console.log(obj1.key);
(a) value
(b) newValue
(c) undefined
(d) TypeError

Answer: newValue